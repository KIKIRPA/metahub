<!DOCTYPE HTML>
<html>
<head>
    <title>Document form</title>
    <meta charset="UTF-8">

    <!-- https://koumoul-dev.github.io/vuetify-jsonschema-form/latest/ -->

    <script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@koumoul/vjsf@2.7.3/dist/main.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@koumoul/vjsf@2.7.3/dist/third-party.js"></script>

    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font@6.x/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@koumoul/vjsf@2.7.3/dist/main.css">
</head>
<body>
    
    <v-app id="app">
        <v-container>
            <br/>
            <v-card class="primary white--text">
                <v-card-title>
                    <span class="text-h6">VUETIFY-JSONSCHEMA-FORM</span>
                </v-card-title>
                <v-card-text class="white">
                    <br/>
                     <ul>
                        <li><a href="https://koumoul-dev.github.io/vuetify-jsonschema-form/latest/">koumoul-dev.github.io/vuetify-jsonschema-form</a></li>
                        <li>Based on Vue 2.x and Vuetify 2.x</li>
                        <li>Last release: Nov 2021 (under active development)</li>
                        <li>Some issues with selects; reverted to version 2.7.3 and removed description from pydantic Field()</li>
                        <li>A few spacing issues</li>
                        <li>Single properties are rendered first, subschemas last. Not really a bug, as json-schema does not enforce an order, but nevertheless annoying... The <a href="https://github.com/koumoul-dev/vuetify-jsonschema-form/issues/293">issue</a> is being worked on.</li>
                        <li>Keys in resulting json are not ordered as in the schema. Not really a bug, as json-schema does not enforce an order, but nevertheless annoying...</li>
                        <li>Validation ok</li>
                        <li><a href="https://koumoul-dev.github.io/vuetify-jsonschema-form/latest/examples#combobox">Combobox</a> mogelijk: "niet limitatieve enum" - heel interessant</li>
                    </ul>
                </v-card-text>
            </v-card>
            <br/>

            <v-form ref="form" v-model="valid">
                <v-jsf v-model="model" :schema="schema" :options="options" />
            </v-form>

            <v-layout row class="mt-2">
                <v-spacer></v-spacer>
                <p>valid={{ '{{valid}}' }}</p>
                <v-btn class="mx-2" color="primary" @click="$refs.form.validate()">Validate</v-btn>
                <v-btn class="mx-2" @click="getSchema('raman/invia_785')">Apply template</v-btn> 
            </v-layout>

            <br/><br/>
            <h5>Model:</h5>
            <pre>{{ '{{model}}' }}</pre>
        </v-container>
    </v-app>

    <script type="text/javascript">
        let initialSchema = "{{ schema }}"
        let schema = {}
        let model = {}
        const options =  { 
            "editMode": "inline",
            //"rootDisplay": "expansion-panels" 
        }

        Vue.component('VJsf', VJsf.default)

        new Vue({
            el: '#app',

            vuetify: new Vuetify({
                theme: {
                    themes: {
                        light: {
                            primary: '#af8d55'
                        },
                    },
                },
            }),

            data: {
                model,
                options,
                schema,
                valid: null
            },

            mounted() {
                this.getSchema(initialSchema)
            },

            methods: {
                getSchema(schemaURL) {
                    axios.get('/schemas/' + schemaURL)
                        .then(response => {
                            this.schema = response.data;
                            window.history.replaceState({}, this.schema.title, "/raman")
                        })
                        .catch(error => {
                            console.log(error)
                        })
                },
            }
        })
    </script>
	
</body>
</html>