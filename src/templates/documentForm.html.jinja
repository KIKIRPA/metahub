<!DOCTYPE HTML>
<html>
<head>
    <title>Document form</title>
    <meta charset="UTF-8">
    <link rel="shortcut icon" href="/static/images/favicon.ico">

    <!-- https://koumoul-dev.github.io/vuetify-jsonschema-form/latest/ -->

    <script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@koumoul/vjsf@2.7.3/dist/main.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@koumoul/vjsf@2.7.3/dist/third-party.js"></script>

    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font@6.x/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@koumoul/vjsf@2.7.3/dist/main.css">
</head>
<body>
    
    <v-app id="app">

        <v-app-bar color="white" >
            <img height="45" src="/static/images/logo.svg"/>
            <v-spacer></v-spacer>
            <v-app-bar-nav-icon></v-app-bar-nav-icon>
        </v-app-bar>

        <v-container>
            <v-card>
                <v-card-title class="primary">
                    <v-row>
                        <v-col cols="8">
                            <span class="white--text text-h4">{{ '{{schema.title}}' }}</span>
                        </v-col>
                        <v-col cols="4">
                            <v-select dense dark
                                :items="templates"
                                label="Template"
                                v-model="template"
                                v-on:change="getSchema"/>
                        </v-col>
                </v-card-title>

                <v-tabs background-color="primary" dark grow>
                    <v-tab>Metadata</v-tab>
                    <v-tab>Related samples</v-tab>
                    <v-tab>Files</v-tab>
                    <v-tab>Annotations</v-tab>
                </v-tabs>

                <v-card-text class="white">
                    <v-form ref="form" v-model="valid">
                        <v-jsf v-model="model" :schema="schema" :options="options" />
                    </v-form>
                </v-card-text>
                <v-card-actions class="white">
                    <v-spacer></v-spacer>
                    <v-btn class="mx-2" color="primary" @click="$refs.form.validate()">Validate</v-btn>
                </v-card-actions>
            </v-card>
            <br/>

            <h5>Valid: {{ '{{valid}}' }}</h5>            
            <h5>Model:</h5>
            <pre>{{ '{{model}}' }}</pre>      

        </v-container>
    </v-app>

    <script type="text/javascript">
        let initialSchema = "{{ schema | safe }}"
        let schema = {}
        let model = {}
        const options =  { 
            "editMode": "inline",
            //"rootDisplay": "expansion-panels" 
        }

        Vue.component('VJsf', VJsf.default)

        new Vue({
            el: '#app',

            vuetify: new Vuetify({
                theme: {
                    themes: {
                        light: {
                            primary: '#af8d55'
                        },
                    },
                },
            }),

            data: {
                model,
                options,
                schema,
                templates: ["raman", "raman/invia_785", "dendro", "dendro/default", "drms"],
                template: initialSchema,
                valid: null
            },

            mounted() {
                this.getSchema(initialSchema)
            },

            methods: {
                getSchema(schemaURL) {
                    axios.get('/schemas/' + schemaURL)
                        .then(response => {
                            this.schema = response.data;
                            window.history.replaceState({}, this.schema.title, '/' + schemaURL)
                        })
                        .catch(error => {
                            console.log(error)
                        })
                },
            }
        })
    </script>
	
</body>
</html>